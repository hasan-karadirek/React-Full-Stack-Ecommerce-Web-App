[{"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/index.js":"1","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/reportWebVitals.js":"2","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/App.js":"3","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/pages/ProductPage.js":"4","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/pages/CategoryPage.js":"5","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/pages/CheckoutPage.js":"6","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/pages/CartPage.js":"7","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/contexts/OrderContext.js":"8","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/contexts/OrderInProcessContext.js":"9","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/pages/PaymentReturnPage.js":"10","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/contexts/CategoryContext.js":"11","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/components/Navbar.js":"12","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/environmentVariables.js":"13","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/components/CategoryPageHeader.js":"14","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/components/UpdateCartButton.js":"15","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/components/ProductList.js":"16","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/hooks/useApiFetch.js":"17","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/components/CheckoutForm.js":"18","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/helpers/cookiesHelpers.js":"19","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/helpers/fetchHelper.js":"20","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/helpers/updateCartHelper.js":"21","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/helpers/checkoutHelper.js":"22"},{"size":535,"mtime":1697150350790,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1697150350790,"results":"25","hashOfConfig":"24"},{"size":3369,"mtime":1697151527095,"results":"26","hashOfConfig":"24"},{"size":3745,"mtime":1697150350790,"results":"27","hashOfConfig":"24"},{"size":675,"mtime":1697150350790,"results":"28","hashOfConfig":"24"},{"size":1275,"mtime":1697150350790,"results":"29","hashOfConfig":"24"},{"size":3114,"mtime":1697150350790,"results":"30","hashOfConfig":"24"},{"size":783,"mtime":1697150350790,"results":"31","hashOfConfig":"24"},{"size":932,"mtime":1697150350790,"results":"32","hashOfConfig":"24"},{"size":2787,"mtime":1697150350790,"results":"33","hashOfConfig":"24"},{"size":792,"mtime":1697150350790,"results":"34","hashOfConfig":"24"},{"size":2181,"mtime":1697151527095,"results":"35","hashOfConfig":"24"},{"size":109,"mtime":1697151527095,"results":"36","hashOfConfig":"24"},{"size":924,"mtime":1697150350786,"results":"37","hashOfConfig":"24"},{"size":472,"mtime":1697150350790,"results":"38","hashOfConfig":"24"},{"size":2116,"mtime":1697150350790,"results":"39","hashOfConfig":"24"},{"size":593,"mtime":1697150350790,"results":"40","hashOfConfig":"24"},{"size":3877,"mtime":1697150350786,"results":"41","hashOfConfig":"24"},{"size":330,"mtime":1697152204566,"results":"42","hashOfConfig":"24"},{"size":160,"mtime":1697150350790,"results":"43","hashOfConfig":"24"},{"size":942,"mtime":1697150350790,"results":"44","hashOfConfig":"24"},{"size":1357,"mtime":1697150350790,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bjszxi",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/index.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/reportWebVitals.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/App.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/pages/ProductPage.js",["118"],[],"import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useApiFetch from \"../hooks/useApiFetch\";\nimport { OrderContext } from \"../contexts/OrderContext\";\nimport UpdateCartButton from \"../components/UpdateCartButton\";\nimport footIcon from \"../assets/feature-reinforced-heel-and-toe.svg\";\nimport materialIcon from \"../assets/material-combed-cotton.svg\";\nimport logo from \"../assets/logo-hs.svg\";\nimport productDetailBannerBlue from \"../assets/blue-smile.svg\";\nimport productDetailBannerPink from \"../assets/pink-icon.svg\";\nimport productDetailBannerLightBlue from \"../assets/light-blue-smile.svg\";\nimport { apiServer } from \"../environmentVariables\";\n\nexport default function ProductPage({ errorHandler }) {\n  const { orderContext, handleOrderContext } = useContext(OrderContext);\n  const { productSlug } = useParams();\n  const url = productSlug ? `${apiServer}/api/products/${productSlug}` : \"\";\n\n  const [result, loading] = useApiFetch(url, null, errorHandler);\n\n  const productExtraInfo = (\n    <ul>\n      <li key=\"extra-info-1\" className=\"info-label\">\n        <img className=\"info-icon\" src={footIcon} alt=\"info\" />{\" \"}\n        <span>Reinforced heel and toes</span>\n      </li>\n      <li key=\"extra-info-2\" className=\"info-label\">\n        <img className=\"info-icon\" src={materialIcon} alt=\"info\" />{\" \"}\n        <span>Combed cotton</span>\n      </li>\n      <li key=\"extra-info-3\" className=\"info-label\">\n        <img className=\"info-icon\" src={logo} alt=\"info\" />{\" \"}\n        <span>86% Cotton, 12% Polyamide, 2% Elastane</span>\n      </li>\n    </ul>\n  );\n  const productDetailBanner = (\n    <div className=\"product-detail-banner-container\">\n      <div className=\"product-detail-banner-image-box\">\n        <img src={productDetailBannerBlue} alt=\"product-detail-banner\" />\n        <p>Unexpected designs</p>\n      </div>\n      <div className=\"product-detail-banner-image-box\">\n        <img src={productDetailBannerPink} alt=\"product-detail-banner\" />\n        <p>Made for everyone</p>\n      </div>\n      <div className=\"product-detail-banner-image-box\">\n        <img src={productDetailBannerLightBlue} alt=\"product-detail-banner\" />\n        <p>Good quality</p>\n      </div>\n    </div>\n  );\n\n  const productImages = result.product ? (\n    result.product.ProductImages.map((image) => {\n      return (\n        <img\n          className=\"product-detail-image\"\n          src={`${apiServer}/api/productImages/${\n            result.product.ProductImages[\n              result.product.ProductImages.indexOf(image)\n            ].path.split(\"/\")[3]\n          }`}\n          alt={result.product.name}\n        />\n      );\n    })\n  ) : (\n    <></>\n  );\n\n  return loading ? (\n    <p>loading</p>\n  ) : (\n    <>\n      <div className=\"navbar-space\"></div>\n      <div className=\"product-container\">\n        <div className=\"product-detail-left\">\n          <div className=\"product-detail-images\">{productImages}</div>\n        </div>\n        <div className=\"product-detail-right\">\n          <div className=\"product-info\">\n            <h1>{result.product.name}</h1>\n            <span className=\"product-detail-price\">\n              {result.product.price}$\n            </span>\n            <br></br>\n            <UpdateCartButton\n              handleOrderContext={handleOrderContext}\n              productId={result.product.id}\n              action=\"add\"\n              textContent=\"Add To Cart\"\n              errorHandler={errorHandler}\n            />\n            <div className=\"product-detail-desc\">\n              <h2>Description</h2>\n              <p>{result.product.description}</p>\n            </div>\n            {productExtraInfo}\n            {productDetailBanner}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/pages/CategoryPage.js",["119"],[],"import React, { useContext } from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport { useParams } from \"react-router-dom\";\nimport { OrderContext } from \"../contexts/OrderContext\";\nimport CategoryPageHeader from \"../components/CategoryPageHeader\";\n\nexport default function CategoryPage({ errorHandler }) {\n  const { orderContext, handleOrderContext } = useContext(OrderContext);\n  const { categorySlug } = useParams();\n  return (\n    <>\n      <CategoryPageHeader categorySlug={categorySlug} />\n      <ProductList\n        errorHandler={errorHandler}\n        handleOrderContext={handleOrderContext}\n        categorySlug={categorySlug}\n      />\n    </>\n  );\n}\n","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/pages/CheckoutPage.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/pages/CartPage.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/contexts/OrderContext.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/contexts/OrderInProcessContext.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/pages/PaymentReturnPage.js",["120","121"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { deleteCookie } from \"../helpers/cookiesHelpers\";\nimport { fetchApi } from \"../helpers/fetchHelper\";\nimport { OrderInProcessContext } from \"../contexts/OrderInProcessContext\";\nimport loadingBar from \"../assets/loading-svgrepo-com.svg\";\nimport { apiServer } from \"../environmentVariables\";\n\nexport default function PaymentReturnPage({ errorHandler }) {\n  const { orderContext, handleOrderContext } = useContext(\n    OrderInProcessContext\n  );\n  const [orderStatus, setOrderStatus] = useState(\"pending\");\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      fetchApi(`${apiServer}/api/checkout/status/${orderContext.id}`)\n        .then((res) => {\n          if (res.order_status === \"closed\") {\n            setOrderStatus(res.payment_status);\n            deleteCookie(\"orderInProcess\");\n            clearInterval(intervalId);\n          }\n        })\n        .catch((err) => errorHandler(err));\n    }, 5000);\n  }, []);\n  let totalQuantity = 0;\n  const cartItems = orderContext\n    ? orderContext.Products.map((product) => {\n        totalQuantity += product.OrderDetail.quantity;\n        return (\n          <div className=\"cart-item\">\n            <div className=\"cart-item-left\">\n              <img\n                className=\"cart-product-image\"\n                src={`${apiServer}/api/productImages/${\n                  product.ProductImages[0].path.split(\"/\")[3]\n                }`}\n                alt={product.name}\n              />\n              <div className=\"cart-update\">\n                <p>{product.name}</p>\n\n                <span>{product.OrderDetail.quantity}</span>\n              </div>\n            </div>\n            <span className=\"cart-product-price\">{product.price}</span>\n          </div>\n        );\n      })\n    : [];\n\n  return (\n    <>\n      <div className=\"navbar-space\"></div>\n      <div className=\"order-detail\">\n        <p>Thank you for your shopping...</p>\n        <p>{`Order Id: ${orderContext.id}`}</p>\n        <p>{orderContext.GuestCustomer.firstName}</p>\n        <p>{orderContext.GuestCustomer.lastName}</p>\n      </div>\n      <div className=\"cart-items\">\n        {cartItems}\n        <div className=\"cart-total-container\">\n          <div className=\"cart-total\">\n            <span>Total ({`${totalQuantity} products`})</span>\n            <span>({`${orderContext.order_total}$`})</span>\n          </div>\n          <p className=\"payment-status\">Payment status</p>\n          <br />\n          <p className=\"payment-status\">\n            {\" \"}\n            {orderStatus === \"pending\" ? (\n              <img class=\"loading-bar\" src={loadingBar} alt=\"loading-bar\" />\n            ) : (\n              orderStatus\n            )}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/contexts/CategoryContext.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/components/Navbar.js",["122","123","124"],[],"import React, { useContext, useEffect } from \"react\";\nimport useApiFetch from \"../hooks/useApiFetch\";\nimport { Link } from \"react-router-dom\";\nimport cartIcon from \"../assets/cart.svg\";\nimport { OrderContext } from \"../contexts/OrderContext\";\nimport { setCookie } from \"../helpers/cookiesHelpers\";\nimport { CategoryContext } from \"../contexts/CategoryContext\";\nimport { apiServer } from \"../environmentVariables\";\n\nexport default function Navbar({ errorHandler }) {\n  const { orderContext, handleOrderContext } = useContext(OrderContext);\n  const { categoryContext, handleCategoryContext } =\n    useContext(CategoryContext);\n  const orderQuantity = orderContext\n    ? orderContext.Products.reduce((acc, product) => {\n        return (acc += product.OrderDetail.quantity);\n      }, 0)\n    : 0;\n  const [result, loading] = useApiFetch(\n    `${apiServer}/api/category/all`,\n    {},\n    errorHandler\n  );\n  const categoriesArr = result && result.categories ? result.categories : [];\n  useEffect(() => {\n    setCookie(\"categories\", JSON.stringify(categoriesArr));\n    handleCategoryContext();\n  }, [categoriesArr]);\n\n  const categoryList = categoriesArr\n    ? categoriesArr.map((category) => {\n        return (\n          <li key={category.slug} className=\"navbar-item\">\n            <Link className=\"navbar-link\" to={`/category/${category.slug}`}>\n              {category.name}\n            </Link>\n          </li>\n        );\n      })\n    : [];\n\n  return loading ? (\n    <p>loading</p>\n  ) : (\n    <div className=\"navbar\">\n      <ul className=\"navbar-items\">\n        <div className=\"navbar-items-left\">{categoryList}</div>\n        <div className=\"navbar-items-right\">\n          <Link className=\"navbar-cart-button\" to={\"/cart\"}>\n            <button\n              className=\"cart-button\"\n              style={{\n                backgroundColor: orderQuantity !== 0 ? \"#58ba54\" : \"\",\n              }}\n            >\n              <img alt=\"cart-icon\" src={cartIcon} />\n              <span className=\"cart-quantity\">{orderQuantity}</span>\n              <input placeholder=\"Search\" className=\"search-input\" />\n            </button>\n          </Link>\n        </div>\n      </ul>\n    </div>\n  );\n}\n","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/environmentVariables.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/components/CategoryPageHeader.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/components/UpdateCartButton.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/components/ProductList.js",["125","126"],[],"import React, { useEffect, useState } from \"react\";\nimport useApiFetch from \"../hooks/useApiFetch\";\nimport { Link } from \"react-router-dom\";\nimport cartIcon from \"../assets/cart.svg\";\nimport { updateCart } from \"../helpers/updateCartHelper\";\nimport { apiServer } from \"../environmentVariables\";\n\nexport default function ProductList({\n  categorySlug,\n  errorHandler,\n  handleOrderContext,\n}) {\n  const url = categorySlug\n    ? `${apiServer}/api/category/${categorySlug}?limit=20`\n    : \"\";\n  const options = { method: \"GET\" };\n  const [products, loading] = useApiFetch(url, options, errorHandler);\n  const mouseEnter = (e) => {\n    const button = e.currentTarget.querySelector(\".product-card-add-to-cart\");\n    button.classList.remove(\"hidden\");\n  };\n\n  const mouseLeave = (e) => {\n    const button = e.currentTarget.querySelector(\".product-card-add-to-cart\");\n    button.classList.add(\"hidden\");\n  };\n\n  const productList = products.products.map((product) => {\n    return (\n      <li\n        key={product.id}\n        className=\"product-card-container\"\n        onMouseEnter={(e) => mouseEnter(e)}\n        onMouseLeave={(e) => mouseLeave(e)}\n      >\n        <Link className=\"product-link\" to={`/product/${product.slug}`}>\n          <img\n            className=\"product-card-image\"\n            src={`${apiServer}/api/productImages/${\n              product.ProductImages[0].path.split(\"/\")[3]\n            }`}\n            alt={product.slug}\n          />\n          <span className=\"product-cart-title\">{product.name}</span>\n          <span className=\"product-card-price\">{product.price}$</span>\n        </Link>\n        <button\n          key={product.id}\n          id={product.id}\n          onClick={(e) => {\n            updateCart(e.target.id, handleOrderContext, \"add\", errorHandler);\n          }}\n          className=\"product-card-add-to-cart hidden\"\n        >\n          <img id={product.id} alt=\"cart-icon\" src={cartIcon} />\n        </button>\n      </li>\n    );\n  });\n  return (\n    <>\n      {loading ? (\n        <p>loading</p>\n      ) : (\n        <ul className=\"product-list\">{productList}</ul>\n      )}\n    </>\n  );\n}\n","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/hooks/useApiFetch.js",["127","128"],[],"import React, { useState, useEffect } from \"react\";\nimport { fetchApi } from \"../helpers/fetchHelper\";\n\nexport default function useApiFetch(url, option, errorHandler) {\n  const urlArr = url.split(\",\");\n\n  const [result, setResult] = useState({ products: [] });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const promises = urlArr.map((url) => fetchApi(url, option));\n\n    Promise.all(promises)\n      .then((res) => {\n        setResult(res[0]);\n        setLoading(false);\n      })\n      .catch((err) => errorHandler(err));\n  }, [url]);\n  return [result, loading];\n}\n","/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/components/CheckoutForm.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/helpers/cookiesHelpers.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/helpers/fetchHelper.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/helpers/updateCartHelper.js",[],[],"/home/ubuntu/React-Full-Stack-Ecommerce-Web-App/react-frontend/src/helpers/checkoutHelper.js",[],[],{"ruleId":"129","severity":1,"message":"130","line":15,"column":11,"nodeType":"131","messageId":"132","endLine":15,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":8,"column":11,"nodeType":"131","messageId":"132","endLine":8,"endColumn":23},{"ruleId":"129","severity":1,"message":"133","line":9,"column":25,"nodeType":"131","messageId":"132","endLine":9,"endColumn":43},{"ruleId":"134","severity":1,"message":"135","line":26,"column":6,"nodeType":"136","endLine":26,"endColumn":8,"suggestions":"137"},{"ruleId":"129","severity":1,"message":"133","line":11,"column":25,"nodeType":"131","messageId":"132","endLine":11,"endColumn":43},{"ruleId":"129","severity":1,"message":"138","line":12,"column":11,"nodeType":"131","messageId":"132","endLine":12,"endColumn":26},{"ruleId":"134","severity":1,"message":"139","line":28,"column":6,"nodeType":"136","endLine":28,"endColumn":21,"suggestions":"140"},{"ruleId":"129","severity":1,"message":"141","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"142","line":1,"column":28,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"143","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"144","line":19,"column":6,"nodeType":"136","endLine":19,"endColumn":11,"suggestions":"145"},"no-unused-vars","'orderContext' is assigned a value but never used.","Identifier","unusedVar","'handleOrderContext' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'errorHandler' and 'orderContext.id'. Either include them or remove the dependency array. If 'errorHandler' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["146"],"'categoryContext' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleCategoryContext'. Either include it or remove the dependency array.",["147"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'errorHandler', 'option', and 'urlArr'. Either include them or remove the dependency array. If 'errorHandler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["148"],{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [errorHandler, orderContext.id]",{"range":"155","text":"156"},"Update the dependencies array to be: [categoriesArr, handleCategoryContext]",{"range":"157","text":"158"},"Update the dependencies array to be: [errorHandler, option, url, urlArr]",{"range":"159","text":"160"},[998,1000],"[errorHandler, orderContext.id]",[1092,1107],"[categoriesArr, handleCategoryContext]",[555,560],"[errorHandler, option, url, urlArr]"]